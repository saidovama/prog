#include <iostream> // 6 задача
#include <cmath>
#include <iomanip>

using namespace std;

double calculate_total_time(double V, double U, double S) {
    double t1 = S / (V + U);
    double t2 = S / (V - U);
    return t1 + t2;
}

double secant_method_example(double x) {
    return x * x - 2;
}

void demonstrate_secant_method() {
    cout << "\nДемонстрация метода секущих (нахождение корня x^2 - 2 = 0):\n";

    double x0 = 1.0;
    double x1 = 2.0; 
    double epsilon = 1e-6;
    int max_iter = 100;

    for (int i = 0; i < max_iter; ++i) {
        double f_x0 = secant_method_example(x0);
        double f_x1 = secant_method_example(x1);

        if (abs(f_x1) < epsilon) {
            cout << "Найден корень: " << x1 << " (итераций: " << i + 1 << ")\n";
            return;
        }

        if (f_x1 - f_x0 == 0) {
            cout << "Деление на ноль. Метод не может продолжаться.\n";
            return;
        }

        double x2 = x1 - f_x1 * (x1 - x0) / (f_x1 - f_x0);
        x0 = x1;
        x1 = x2;
    }

    cout << "Метод не сошелся за " << max_iter << " итераций.\n";
}


int main() {
    double V, U, S;

    cout << "Введите скорость лодки в стоячей воде V (км/ч): ";
    cin >> V;
    cout << "Введите скорость течения реки U (км/ч): ";
    cin >> U;
    cout << "Введите расстояние между пунктами S (км): ";
    cin >> S;

    if (V <= 0 || U < 0 || S <= 0) {
        cout << "Ошибка: скорости и расстояние должны быть положительными.\n";
        return 1;
    }

    if (U >= V) {
        cout << "Ошибка: скорость течения не может быть больше или равна скорости лодки.\n";
        return 1;
    }

    double total_time = calculate_total_time(V, U, S);

    cout << "\nРезультаты расчета:\n";
    cout << "Время движения по течению: " << S / (V + U) << " ч\n";
    cout << "Время движения против течения: " << S / (V - U) << " ч\n";
    cout << "Общее время движения: " << total_time << " ч\n";

    return 0;
}
